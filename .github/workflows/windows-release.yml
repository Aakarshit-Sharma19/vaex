name: Python package

on:
  push:
    branches:
    - release
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 10
      matrix:
        os: [windows-latest]
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install conda with Python ${{ matrix.python-version }}
      uses: s-weigand/setup-conda@master
      with:
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge
    - name: Create env
      # if: steps.cache-conda-env.outputs.cache-hit != 'true'
      run: |
        conda create -q -n vaex -c conda-forge python=${{ matrix.python-version }} pip wheel pcre
    - name: Add conda to path
      shell: bash
      run: |
        conda init --all
        echo ::add-path::$CONDA/envs/vaex/bin
    - name: Fix python-dateutil/botocore version conflict (windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        source activate vaex
        pip install python-dateutil==2.8.0  # botocore caps dateutil leading to issues
    - name: Cache compiled binaries
      id: cache-compiled-binaries
      uses: actions/cache@v1
      with:
        path: packages/vaex-core/build
        key: ${{ runner.OS }}-${{ matrix.python-version }}-${{ hashFiles('packages/vaex-core/src/*') }}
    # - name: Fix cache timestamp
    #   # if: steps.cache-compiled-binaries.outputs.cache-hit == 'true' && matrix.os != 'windows-latest'
    #   shell: bash
    #   run: |
    #     find packages/vaex-core/build -type f -exec touch {} +
    - name: Create binary wheel
      shell: bash
      run: |
        source activate vaex
        cd packages/vaex-core
        python setup.py bdist_wheel
    - name: Upload wheel
      uses: actions/upload-artifact@v1
      with:
        name: vaex-core-${{ matrix.python-version }}
        path: packages/vaex-core/dist
    - name: Install vaex-core
      shell: bash
      run: |
        pip install packages/vaex-core/dist/*.whl
    - name: Test import
      shell: bash
      run: |
        python -c 'import vaex; df = vaex.from_scalars(x=1, y=2); print(df)'
